// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               unknown
// source: sedachain/wasm_storage/v1/genesis.proto

/* eslint-disable */
import _m0 from "protobufjs/minimal";
import { DataRequestWasm, ExecutorWasm, Params } from "./wasm_storage";

/**
 * GenesisState defines the wasm module's genesis state(i.e wasms stored at
 * genesis.)
 */
export interface GenesisState {
  params: Params | undefined;
  dataRequestWasms: DataRequestWasm[];
  executorWasms: ExecutorWasm[];
  coreContractRegistry: string;
}

function createBaseGenesisState(): GenesisState {
  return { params: undefined, dataRequestWasms: [], executorWasms: [], coreContractRegistry: "" };
}

export const GenesisState = {
  encode(message: GenesisState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.params !== undefined) {
      Params.encode(message.params, writer.uint32(10).fork()).ldelim();
    }
    for (const v of message.dataRequestWasms) {
      DataRequestWasm.encode(v!, writer.uint32(18).fork()).ldelim();
    }
    for (const v of message.executorWasms) {
      ExecutorWasm.encode(v!, writer.uint32(26).fork()).ldelim();
    }
    if (message.coreContractRegistry !== "") {
      writer.uint32(34).string(message.coreContractRegistry);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GenesisState {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGenesisState();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.params = Params.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.dataRequestWasms.push(DataRequestWasm.decode(reader, reader.uint32()));
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.executorWasms.push(ExecutorWasm.decode(reader, reader.uint32()));
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.coreContractRegistry = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GenesisState {
    return {
      params: isSet(object.params) ? Params.fromJSON(object.params) : undefined,
      dataRequestWasms: globalThis.Array.isArray(object?.dataRequestWasms)
        ? object.dataRequestWasms.map((e: any) => DataRequestWasm.fromJSON(e))
        : [],
      executorWasms: globalThis.Array.isArray(object?.executorWasms)
        ? object.executorWasms.map((e: any) => ExecutorWasm.fromJSON(e))
        : [],
      coreContractRegistry: isSet(object.coreContractRegistry) ? globalThis.String(object.coreContractRegistry) : "",
    };
  },

  toJSON(message: GenesisState): unknown {
    const obj: any = {};
    if (message.params !== undefined) {
      obj.params = Params.toJSON(message.params);
    }
    if (message.dataRequestWasms?.length) {
      obj.dataRequestWasms = message.dataRequestWasms.map((e) => DataRequestWasm.toJSON(e));
    }
    if (message.executorWasms?.length) {
      obj.executorWasms = message.executorWasms.map((e) => ExecutorWasm.toJSON(e));
    }
    if (message.coreContractRegistry !== "") {
      obj.coreContractRegistry = message.coreContractRegistry;
    }
    return obj;
  },

  create(base?: DeepPartial<GenesisState>): GenesisState {
    return GenesisState.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GenesisState>): GenesisState {
    const message = createBaseGenesisState();
    message.params = (object.params !== undefined && object.params !== null)
      ? Params.fromPartial(object.params)
      : undefined;
    message.dataRequestWasms = object.dataRequestWasms?.map((e) => DataRequestWasm.fromPartial(e)) || [];
    message.executorWasms = object.executorWasms?.map((e) => ExecutorWasm.fromPartial(e)) || [];
    message.coreContractRegistry = object.coreContractRegistry ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
